@model DomasticAidManagementSystem.Models.Categories.CategoryViewModel
@{
    Layout = "~/Views/Shared/_user_layouy.cshtml";
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
<style>
    body {
        font-family: Arial, sans-serif;
        background: #f4f4f9;
        margin: 0;
        padding: 0;
    }

    h2 {
        text-align: center;
        font-size: 28px;
        color: #333;
        margin-bottom: 20px;
    }

    #subCategoryContainer {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        gap: 15px;
        padding: 20px;
    }

    .card {
        background: #fff;
        border-radius: 15px;
        padding: 15px;
        width: 240px;
        text-align: center;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease-in-out;
        position: relative;
    }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 6px 15px rgba(0, 0, 0, 0.15);
        }

        .card h3 {
            font-size: 18px;
            margin-bottom: 10px;
            color: #333;
        }

    .base-price {
        font-weight: bold;
        color: #007bff;
        font-size: 16px;
    }

    .quantity-container {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 10px;
        margin-top: 15px;
    }

    .quantity-btn {
        background-color: #28a745;
        color: white;
        border: none;
        padding: 8px 12px;
        font-size: 16px;
        cursor: pointer;
        border-radius: 5px;
        transition: background 0.3s;
    }

        .quantity-btn:hover {
            background-color: #218838;
        }

    .qty-input {
        width: 40px;
        text-align: center;
        font-size: 16px;
        border: 1px solid #ddd;
        border-radius: 5px;
        padding: 5px;
        background: #f8f9fa;
    }

    .total-price {
        font-weight: bold;
        font-size: 16px;
        color: #dc3545;
        margin-top: 10px;
    }

    #cartButton {
        position: fixed;
        bottom: 20px;
        right: 20px;
        background-color: #ff5722;
        color: white;
        border: none;
        border-radius: 50px;
        padding: 15px 20px;
        font-size: 18px;
        cursor: pointer;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
        transition: transform 0.3s ease-in-out;
    }

        #cartButton:hover {
            transform: scale(1.1);
        }
</style>

<h2>@Model.CategoryName</h2>

<div id="subCategoryContainer">
    @if (Model.SubCategories != null && Model.SubCategories.Any())
    {
        foreach (var subCategory in Model.SubCategories)
        {
            <div class="card" data-id="@subCategory.SubCategoryId" data-name="@subCategory.SubCategoryName" data-price="@subCategory.BasePrice">
                <h3>@subCategory.SubCategoryName</h3>
                <p>Base Price: ₹<span class="base-price">@subCategory.BasePrice</span></p>
                <div class="quantity-container">
                    <button class="quantity-btn minus"><i class="fa fa-minus"></i></button>
                    <input type="text" class="qty-input" value="0" readonly />
                    <button class="quantity-btn plus"><i class="fa fa-plus"></i></button>
                </div>
                <p>Total: ₹<span class="total-price">0</span></p>
            </div>
        }
    }
    else
    {
        <p>No subcategories available.</p>
    }
</div>

<button id="cartButton">
    <a href="../UserMaster/PlaceOrder" style="color: white; text-decoration: none;"><i class="fa fa-shopping-cart"></i> Cart (<span id="cartCount">0</span>)</a>
</button>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        let cart = JSON.parse(localStorage.getItem("cart") || "[]");
        if (!Array.isArray(cart)) cart = [];

        function updateCart() {
            let totalItems = cart.reduce((acc, item) => acc + (item.qty || 0), 0);
            $("#cartCount").text(totalItems);
        }

        function updateTotalPrice(card, qty) {
            let price = parseFloat(card.attr("data-price"));
            let total = price * qty;
            card.find(".total-price").text(total.toFixed(2));
        }

        function addToCart(id, name, price, qty) {
            let itemIndex = cart.findIndex(item => item.id === id);
            if (itemIndex > -1) {
                cart[itemIndex].qty = qty;
                if (qty === 0) cart.splice(itemIndex, 1);
            } else if (qty > 0) {
                cart.push({ id, name, price, qty });
            }
            localStorage.setItem("cart", JSON.stringify(cart));
            updateCart();
        }

        function restoreCart() {
            $(".card").each(function () {
                let card = $(this);
                let id = card.attr("data-id");
                let cartItem = cart.find(item => item.id === id);
                if (cartItem) {
                    let qtyInput = card.find(".qty-input");
                    qtyInput.val(cartItem.qty);
                    updateTotalPrice(card, cartItem.qty);
                }
            });
            updateCart();
        }

        $(".plus").click(function () {
            let card = $(this).closest(".card");
            let qtyInput = card.find(".qty-input");
            let newQty = parseInt(qtyInput.val()) + 1;
            qtyInput.val(newQty);
            updateTotalPrice(card, newQty);
            addToCart(card.attr("data-id"), card.attr("data-name"), parseFloat(card.attr("data-price")), newQty);
        });

        $(".minus").click(function () {
            let card = $(this).closest(".card");
            let qtyInput = card.find(".qty-input");
            let newQty = Math.max(parseInt(qtyInput.val()) - 1, 0);
            qtyInput.val(newQty);
            updateTotalPrice(card, newQty);
            addToCart(card.attr("data-id"), card.attr("data-name"), parseFloat(card.attr("data-price")), newQty);
        });

        restoreCart();
    });
</script>